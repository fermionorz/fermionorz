<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一语成谶</title>
  
  
  <link href="http://fermionorz.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://fermionorz.github.io/blog/"/>
  <updated>2024-10-17T02:28:58.358Z</updated>
  <id>http://fermionorz.github.io/blog/</id>
  
  <author>
    <name>Fermionorz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows 恶意软件开发</title>
    <link href="http://fermionorz.github.io/blog/2024/10/08/Windows%20%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>http://fermionorz.github.io/blog/2024/10/08/Windows%20%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</id>
    <published>2024-10-08T07:24:00.000Z</published>
    <updated>2024-10-17T02:28:58.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Windows 下的恶意软件一般包含以下功能</p><ul><li><input disabled="" type="checkbox"> Payload 存储、加密、混淆、执行</li><li><input disabled="" type="checkbox"> PE 信息伪造、进程信息伪造</li><li><input disabled="" type="checkbox"> 沙箱检测、虚拟环境检测</li><li><input disabled="" type="checkbox"> 反调试、杀软绕过</li><li><input disabled="" type="checkbox"> EDR 绕过</li></ul><h2 id="Payload-存储"><a href="#Payload-存储" class="headerlink" title="Payload 存储"></a>Payload 存储</h2><p>目前有以下存储方式</p><ul><li>PE 文件内部<ul><li>.data .rdata 段</li><li>.text 段</li><li>.rsrc 段</li></ul></li><li>本地 Payload 分离<ul><li>可以起一个伪装的名称，config.xml、resources.pak…</li></ul></li><li>远程 Payload<ul><li><a href="https://xxx.com/favicon.ico">https://xxx.com/favicon.ico</a></li><li><a href="http://xxx.com/uploads/images/head.png">http://xxx.com/uploads/images/head.png</a></li></ul></li><li>Windows 注册表</li></ul><p>三种方法各有优劣，应根据实际应用场景进行选择。例如：</p><ul><li>在权限维持场景中，可以优先考虑 Payload 分离；</li><li>在社工钓鱼的场景中，可以优先考虑远程文件的方式，这样可以在钓鱼行动被发现后更改远程 Payload 内容；</li><li>在多层内网环境或者存在离线环境的情况下，就优先考虑在 PE 文件内部存储 Payload，这样会让蓝队不那么容易去追踪感染链。</li></ul><h3 id="PE-文件内部存储"><a href="#PE-文件内部存储" class="headerlink" title="PE 文件内部存储"></a>PE 文件内部存储</h3><ul><li><input disabled="" type="checkbox"> .data 段主要包含初始化的全局和静态变量，可读可写；.rdata 段存放常量，只读。一个较小的程序需要初始化一个较大的变量，这种行为看起来多少会有些奇怪。</li><li><input disabled="" type="checkbox"> .text 段具有可执行权限，存储在其中的数据可以直接执行，因此这个段需要接受的审查会更严格，如果 Payload 较小（小于 10 字节），那么放在此段效果会很好。</li><li><input checked="" disabled="" type="checkbox"> .rsrc 段主要放置资源文件，实际情况下大部分的二进制文件都会在此存放数据，所以 Payload 可以未造成图标或者其他文件存储在这里。</li></ul><h3 id="Payload-分离"><a href="#Payload-分离" class="headerlink" title="Payload 分离"></a>Payload 分离</h3><p>Payload 分离，需要考虑的问题就是如何伪装，可以根据普通应用程序的内容来模仿。</p><ul><li>Windows 注册表</li><li>游戏资源文件</li><li>主题文件</li><li>chm 手册</li><li>pak、v8 文件（主要是一些基于浏览器打包的应用程序）</li><li>ui 文件</li><li>dll 文件</li></ul><h3 id="远程-Payload"><a href="#远程-Payload" class="headerlink" title="远程 Payload"></a>远程 Payload</h3><p>本质上也是对 Payload 进行分离，所以需要考虑的内容也是如何伪装</p><ul><li>图标资源</li><li>API 请求</li><li>…</li></ul><h2 id="Payload-加密"><a href="#Payload-加密" class="headerlink" title="Payload 加密"></a>Payload 加密</h2><ul><li><input disabled="" type="checkbox"> XOR</li><li><input disabled="" type="checkbox"> RC4</li><li><input checked="" disabled="" type="checkbox"> AES</li></ul><p>XOR、RC4 加密已经无法绕过 Windows Defender 了，建议使用 AES 或者其他强加密方法。</p><h2 id="Payload-混淆"><a href="#Payload-混淆" class="headerlink" title="Payload 混淆"></a>Payload 混淆</h2><ul><li><input checked="" disabled="" type="checkbox"> IPv4&#x2F;IPv6</li><li><input checked="" disabled="" type="checkbox"> MAC</li><li><input checked="" disabled="" type="checkbox"> UUID</li></ul><p>三种方法可以结合应用场景进行选择。例如：Payload 分离的存储方式可以搭配 MAC 混淆，将 Payload 存储在 xml 等文件中。</p><h2 id="Payload-执行"><a href="#Payload-执行" class="headerlink" title="Payload 执行"></a>Payload 执行</h2><ul><li><input disabled="" type="checkbox"> 本地&#x2F;远程 DLL 加载</li><li><input disabled="" type="checkbox"> 本地&#x2F;远程进程执行</li><li><input disabled="" type="checkbox"> 本地&#x2F;远程线程创建</li><li><input disabled="" type="checkbox"> 本地&#x2F;远程线程劫持</li><li><input disabled="" type="checkbox"> APC 注入</li><li><input disabled="" type="checkbox"> 回调代码执行</li><li><input disabled="" type="checkbox"> 本地&#x2F;远程映射注入</li><li><input disabled="" type="checkbox"> 本地&#x2F;远程函数篡改</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Windows 下的恶意软件一般包含以下功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;</summary>
      
    
    
    
    
    <category term="Security" scheme="http://fermionorz.github.io/blog/tags/Security/"/>
    
    <category term="Windows" scheme="http://fermionorz.github.io/blog/tags/Windows/"/>
    
    <category term="C" scheme="http://fermionorz.github.io/blog/tags/C/"/>
    
    <category term="恶意软件" scheme="http://fermionorz.github.io/blog/tags/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>个人站点解决方案</title>
    <link href="http://fermionorz.github.io/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://fermionorz.github.io/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2024-09-29T07:24:00.000Z</published>
    <updated>2024-10-17T02:28:58.358Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目前的解决方案：<br>    主页：HTML&#x2F;CSS&#x2F;Javascript + Github Pages<br>    博客：Hexo + cactus + Github Action<br>    笔记：Mkdocs + Github Action</p></blockquote><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>一个主页，纯 HTML + CSS + JS 就可以，用于呈现个人介绍、简历、友链、以及其他站点的跳转</li><li>Blog，随笔记录</li><li>Wiki，学习笔记</li><li>osint，放置 osint 工具</li><li>CyberChef，纯前端实现的编码&#x2F;解码、加密&#x2F;解密工具。</li><li>…，其他内容后续再添加</li></ol><h2 id="主页面"><a href="#主页面" class="headerlink" title="主页面"></a>主页面</h2><p>现在的主页面的内容先临时搁置了（因为 HTML、CSS、JS 不太熟）</p><p>考虑到主页面内容不多，可能只涉及到三个文件</p><ul><li>index.html</li><li>style.css</li><li>script.js</li></ul><p>因此打算手动上传</p><p>在 Github 中创建一个 <code>[your_name].github.io</code> 仓库就可以了，默认的配置会自动生成站点。</p><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p>Blog 采用 Hexo 引擎 cactus 主题，并对主题做了些微改动</p><h3 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h3><blockquote><p>我这里使用的是 Node.js 18.x 版本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line"><span class="comment"># 创建私有 github 仓库 https://github.com/[youname]/blog.git</span></span><br><span class="line"><span class="comment"># 想知道如何 clone/push/pull 私有仓库，去网上搜搜吧</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[your_name]/blog.git</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 初始化 blog</span></span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># 安装主题</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><ul><li>编辑 blog&#x2F;_config.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#x27;标题&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;站点简介&#x27;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">&#x27;作者名称&#x27;</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment"># 我这里使用的是 github pages 的一个子目录</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">&#x27;https://[your_name].github.io/blog&#x27;</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">cactus</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="comment"># 其他可以保持默认</span></span><br></pre></td></tr></table></figure><ul><li>编辑 blog&#x2F;theme&#x2F;cactus&#x2F;_config.yml，配置内容参考作者提供的文档即可</li></ul><blockquote><p><a href="https://github.com/probberechts/hexo-theme-cactus">https://github.com/probberechts/hexo-theme-cactus</a></p></blockquote><h3 id="Github-Action-自动化发布"><a href="#Github-Action-自动化发布" class="headerlink" title="Github Action 自动化发布"></a>Github Action 自动化发布</h3><ul><li>编辑 .github&#x2F;workflows&#x2F;hexo.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">hexo-ci</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">permissions:</span></span><br><span class="line">  <span class="attr">contents:</span> <span class="string">write</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">使用</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;18&quot;</span></span><br><span class="line">          </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装搜索</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-search</span> <span class="string">--save</span></span><br><span class="line">        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">markdown</span> <span class="string">图片索引</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-image-link</span> <span class="string">--save</span></span><br><span class="line">        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">发布到公共仓库</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PUBLISH_BLOG</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">destination_dir:</span> <span class="string">blog</span></span><br><span class="line">          <span class="attr">external_repository:</span> [<span class="string">your_name</span>]<span class="string">/[your_name].github.io</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>我这里是跨仓库发布，因此需要一个 TOKEN，上面我命名的这个 <code>secrets.PUBLISH_BLOG</code></p><p>登录 Github 之后，打开 <a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a> 页面</p><img src="/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-20240929150803.png" class=""><ol><li>这里的 Note 可以随便设置，是用于区分 token 的，以便于看到后可以快速回忆起，建议设置成仓库名：Blog_token</li><li>Expiration 是可以时间，我嫌麻烦一般设置成永久，安全起见可以设置成 90 天，然后过期再更新</li><li>下面的作用范围只需要勾选 workflow 就行，会自动选中 repo 权限</li></ol><p>生成后会得到一个密钥，先复制下来待会要用</p><img src="/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-20240929151040.png" class=""><p>打开 <a href="https://github.com/fermionorz/blog/settings/secrets/actions/new">https://github.com/fermionorz/blog/settings/secrets/actions/new</a> 页面，添加刚刚复制的密钥</p><img src="/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-20240929151247.png" class=""><p>添加成功后的效果</p><img src="/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-20240929151323.png" class=""><p>这里就没问题了，这个时候每次对仓库进行提交，都会自动把内容发布到 <code>[your_name]/[your_name].github.io</code> 仓库的 <code>blog</code> 目录中</p><p>然后可以转到 <code>[your_name].github.io</code> 仓库看到了</p><img src="/blog/2024/09/29/%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-20240929151818.png" class="">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目前的解决方案：&lt;br&gt;    主页：HTML&amp;#x2F;CSS&amp;#x2F;Javascript + Github Pages&lt;br&gt;    博客：Hexo + cactus + Github Action&lt;br&gt;    笔记：Mkdocs + G</summary>
      
    
    
    
    
    <category term="Site" scheme="http://fermionorz.github.io/blog/tags/Site/"/>
    
  </entry>
  
  <entry>
    <title>2024 年末计划</title>
    <link href="http://fermionorz.github.io/blog/2024/09/26/2024%20%E5%B9%B4%E5%86%AC%E6%97%A5%E8%AE%A1%E5%88%92/"/>
    <id>http://fermionorz.github.io/blog/2024/09/26/2024%20%E5%B9%B4%E5%86%AC%E6%97%A5%E8%AE%A1%E5%88%92/</id>
    <published>2024-09-26T02:40:00.000Z</published>
    <updated>2024-10-17T02:28:58.358Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2024-09 —— 2025</p></blockquote><ol><li>软考中级-信息安全工程师（有点想摆了）</li><li>Maldev Academy 学习</li><li>LPI-Learning-Material 教材学习</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2024-09 —— 2025&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;软考中级-信息安全工程师（有点想摆了）&lt;/li&gt;
&lt;li&gt;Maldev Academy 学习&lt;/li&gt;
&lt;li&gt;LPI-Learning-Material 教材学</summary>
      
    
    
    
    
    <category term="随笔" scheme="http://fermionorz.github.io/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
